"""
Задача 3. Свой словарь
Что нужно сделать

В силу обстоятельств Васе постоянно приходится работать со словарями и их данными. В том числе и с методом get,
который по умолчанию возвращает None, если такого ключа в словаре нет. Однако Васю это не устраивает: для нормальной
работы ему нужно возвращать число 0.
Реализуйте класс MyDict, который будет вести себя точно так же, как и обычный словарь, за исключением того,
что метод get по умолчанию будет возвращать не None, а число 0.
"""

class MyDict:
    '''
    Создаем словарь Имя и его номер.
    Запрашиваем имя и выводим его значение на экран с проверкой, если
    имя есть в словаре то его номер если нет, то заменяем значение None на 0
    numbers_person - словарь (ключ - имя, значение - номер)
    :rtype dict
    name - имя в запросе

    '''
    numbers_person = {'Игорь': 1, 'Олеся': 2, 'Ксюша': 3, 'Никита': 4, 'Виктор': 5, 'Настя': 6}

    def __init__(self, name):
        self.name = name

    def search_numbers(self):
        """
        Проверяем значение есл имя есть в словаре, то вызываем его значение иначе возвращаем 0
        :return: значение или 0
        """
        if self.answer != None:
            return self.answer
        else:
            return 0

    def print_numbers(self):
        """Отправляем гет запрос в словарь и выводим результат с проверкой значения """
        self.answer = self.numbers_person.get(self.name)
        print('Имя: {name}\nзначение: {search}'.format(name=self.name, search=self.search_numbers()))

# Создаем человека и выводим его значение
humen = MyDict(input('Введите имя: '))
humen.print_numbers()